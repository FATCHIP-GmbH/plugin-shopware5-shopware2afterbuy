<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <!-- Cronjobs -->

        <service id="viaeb_shopware_afterbuy.subscriber.cron" class="viaebShopwareAfterbuy\Subscriber\Cron">
            <argument type="service" id="shopware.plugin.cached_config_reader" />
            <argument type="string">%viaeb_shopware_afterbuy.plugin_name%</argument>
            <tag name="shopware.event_subscriber" />
        </service>


        <!-- Commands -->

        <service id="viaeb_shopware_afterbuy.commands.export_status" class="viaebShopwareAfterbuy\Commands\ExportStatus">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.internal.read_status_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.external.write_status_service" />
        </service>

        <service id="viaeb_shopware_afterbuy.commands.import_categories" class="viaebShopwareAfterbuy\Commands\ImportCategories">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.external.read_categories_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.internal.write_categories_service" />
        </service>

        <service id="viaeb_shopware_afterbuy.commands.export_categories" class="viaebShopwareAfterbuy\Commands\ExportCategories">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.internal.read_categories_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.external.write_categories_service" />
        </service>

        <service id="viaeb_shopware_afterbuy.commands.export_orders" class="viaebShopwareAfterbuy\Commands\ExportOrders">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.internal.read_orders_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.external.write_orders_service" />
        </service>

        <service id="viaeb_shopware_afterbuy.commands.import_orders" class="viaebShopwareAfterbuy\Commands\ImportOrders">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.external.read_orders_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.internal.write_orders_service" />
            <argument type="service" id="shopware.plugin.cached_config_reader" />
            <argument type="string">%viaeb_shopware_afterbuy.plugin_name%</argument>
        </service>

        <service id="viaeb_shopware_afterbuy.commands.import_products" class="viaebShopwareAfterbuy\Commands\ImportProducts">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.external.read_products_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.internal.write_products_service" />
        </service>

        <service id="viaeb_shopware_afterbuy.commands.export_products" class="viaebShopwareAfterbuy\Commands\ExportProducts">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.internal.read_products_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.external.write_products_service" />
        </service>

        <service id="viaeb_shopware_afterbuy.commands.update_products" class="viaebShopwareAfterbuy\Commands\UpdateProducts">
            <tag name="console.command" />
            <argument type="service" id="shopware.plugin.cached_config_reader" />
            <argument type="string">%viaeb_shopware_afterbuy.plugin_name%</argument>
        </service>

        <service id="viaeb_shopware_afterbuy.commands.update_orders" class="viaebShopwareAfterbuy\Commands\UpdateOrders">
            <tag name="console.command" />
            <argument type="service" id="shopware.plugin.cached_config_reader" />
            <argument type="string">%viaeb_shopware_afterbuy.plugin_name%</argument>
        </service>

        <service id="viaeb_shopware_afterbuy.commands.import_status" class="viaebShopwareAfterbuy\Commands\ImportStatus">
            <tag name="console.command" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.read_data.external.read_orders_service" />
            <argument type="service" id="viaeb_shopware_afterbuy.services.write_data.internal.write_status_service" />
        </service>

        <!-- Products -->

        <service class="viaebShopwareAfterbuy\Services\ReadData\External\ReadProductsService" id="viaeb_shopware_afterbuy.services.read_data.external.read_products_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="setTarget">
                <argument type="string">viaebShopwareAfterbuy\ValueObjects\Article</argument>
            </call>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.afterbuy_products_helper"/>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\Internal\WriteProductsService" id="viaeb_shopware_afterbuy.services.write_data.internal.write_products_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="setRepo">
                <argument type="string">\Shopware\Models\Article\Article</argument>
            </call>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_article_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\ReadData\Internal\ReadProductsService" id="viaeb_shopware_afterbuy.services.read_data.internal.read_products_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="setTarget">
                <argument type="string">viaebShopwareAfterbuy\ValueObjects\Article</argument>
            </call>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_article_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
            <call method="initMediaService">
                <argument type="service" id="shopware_media.media_service"/>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\External\WriteProductsService" id="viaeb_shopware_afterbuy.services.write_data.external.write_products_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.afterbuy_products_helper"/>
            </call>
        </service>

        <!-- Orderstatus -->

        <service class="viaebShopwareAfterbuy\Services\ReadData\Internal\ReadStatusService" id="viaeb_shopware_afterbuy.services.read_data.internal.read_status_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
        </service>
        <service class="viaebShopwareAfterbuy\Services\WriteData\External\WriteStatusService" id="viaeb_shopware_afterbuy.services.write_data.external.write_status_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
        </service>

        <!-- Orders -->

        <service class="viaebShopwareAfterbuy\Services\ReadData\Internal\ReadOrdersService" id="viaeb_shopware_afterbuy.services.read_data.internal.read_orders_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
            <call method="setRepo">
                <argument type="string">\Shopware\Models\Order\Order</argument>
            </call>
            <call method="setTarget">
                <argument type="string">viaebShopwareAfterbuy\ValueObjects\Order</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\ReadData\External\ReadOrdersService" id="viaeb_shopware_afterbuy.services.read_data.external.read_orders_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
            <call method="setTarget">
                <argument type="string">viaebShopwareAfterbuy\ValueObjects\Order</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\External\WriteOrdersService" id="viaeb_shopware_afterbuy.services.write_data.external.write_orders_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\Internal\WriteOrdersService" id="viaeb_shopware_afterbuy.services.write_data.internal.write_orders_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="setRepo">
                <argument type="string">\Shopware\Models\Order\Order</argument>
            </call>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\Internal\WriteStatusService" id="viaeb_shopware_afterbuy.services.write_data.internal.write_status_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="setRepo">
                <argument type="string">\Shopware\Models\Order\Order</argument>
            </call>
            <call method="initHelper">
                <argument type="service" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper"/>
                <argument type="string">number</argument>
                <argument>false</argument>
            </call>
        </service>

        <!-- Categories -->

        <service class="viaebShopwareAfterbuy\Services\ReadData\External\ReadCategoriesService" id="viaeb_shopware_afterbuy.services.read_data.external.read_categories_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <call method="setTarget">
                <argument type="string">viaebShopwareAfterbuy\ValueObjects\Category</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\Internal\WriteCategoriesService" id="viaeb_shopware_afterbuy.services.write_data.internal.write_categories_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
            <call method="initHelper">
                <argument id="viaeb_shopware_afterbuy.services.helper.shopware_category_helper" type="service"/>
                <argument type="string">afterbuyCatalogId</argument>
                <argument>true</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\ReadData\Internal\ReadCategoriesService" id="viaeb_shopware_afterbuy.services.read_data.internal.read_categories_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <call method="setTarget">
                <argument type="string">viaebShopwareAfterbuy\ValueObjects\Category</argument>
            </call>
            <call method="initHelper">
                <argument id="viaeb_shopware_afterbuy.services.helper.shopware_category_helper" type="service"/>
                <argument type="string">afterbuyCatalogId</argument>
                <argument>true</argument>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\WriteData\External\WriteCategoriesService" id="viaeb_shopware_afterbuy.services.write_data.external.write_categories_service" parent="viaeb_shopware_afterbuy.services.abstract_data_service">
            <argument id="models" type="service"/>
              <call method="initHelper">
                <argument id="viaeb_shopware_afterbuy.services.helper.shopware_category_helper" type="service"/>
                <argument type="string">afterbuyCatalogId</argument>
                <argument>true</argument>
            </call>
        </service>

        <!-- Abstracts -->

        <service id="viaeb_shopware_afterbuy.services.abstract_data_service" class="viaebShopwareAfterbuy\Services\AbstractDataService" abstract="true">
            <call method="setLogger">
                <argument type="service" id="afterbuy.logger" />
            </call>
            <call method="setConfig">
                <argument type="service" id="shopware.plugin.cached_config_reader" />
                <argument type="string">%viaeb_shopware_afterbuy.plugin_name%</argument>
            </call>
            <call method="registerAPINamespaces">
                <argument type="string">%viaeb_shopware_afterbuy.plugin_dir%</argument>
            </call>
        </service>



        <!-- Helper -->

        <service class="viaebShopwareAfterbuy\Services\Helper\ShopwareOrderHelper" id="viaeb_shopware_afterbuy.services.helper.shopware_order_helper">
            <argument id="models" type="service"/>
            <argument type="string">\Shopware\Models\Order\Order</argument>
            <argument type="string">\Shopware\Models\Attribute\Order</argument>
            <argument type="string">getOrder</argument>
            <call method="preFetch">

            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\Helper\AfterbuyProductsHelper" id="viaeb_shopware_afterbuy.services.helper.afterbuy_products_helper">
            <argument id="models" type="service"/>
            <call method="setLogger">
                <argument type="service" id="afterbuy.logger" />
            </call>
            <call method="initDb">
                <argument type="service" id="shopware.db"/>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\Helper\ShopwareCategoryHelper" id="viaeb_shopware_afterbuy.services.helper.shopware_category_helper">
            <argument id="models" type="service"/>
            <argument type="string">\Shopware\Models\Category\Category</argument>
            <argument type="string">\Shopware\Models\Attribute\Category</argument>
            <argument type="string">getCategory</argument>
            <call method="initDb">
                <argument type="service" id="shopware.db"/>
            </call>
        </service>

        <service class="viaebShopwareAfterbuy\Services\Helper\ShopwareArticleHelper" id="viaeb_shopware_afterbuy.services.helper.shopware_article_helper">
            <argument id="models" type="service"/>
            <argument type="string">\Shopware\Models\Article\Article</argument>
            <argument type="string">\Shopware\Models\Attribute\Attribute</argument>
            <argument type="string">getArticle</argument>
            <call method="initDb">
                <argument type="service" id="shopware.db"/>
            </call>
            <call method="initMediaService">
                <argument type="service" id="shopware_media.media_service"/>
            </call>
            <call method="setLogger">
                <argument type="service" id="afterbuy.logger" />
            </call>
        </service>

        <!-- Logger -->

        <service id="monolog.handler.afterbuy_file" class="Monolog\Handler\RotatingFileHandler" public="false">
            <argument>%kernel.logs_dir%/afterbuy_%kernel.environment%.log</argument>
            <argument>14</argument>
            <argument>%kernel.default_error_level%</argument>
            <call method="pushProcessor">
                <argument type="service" id="monolog.processor.uid" />
            </call>
        </service>

        <service id="afterbuy.logger" class="Shopware\Components\Logger">
            <argument>Afterbuy</argument>
            <argument type="collection">
                    <argument type="service" id="monolog.handler.afterbuy_file"/>
            </argument>
        </service>

    </services>
</container>
