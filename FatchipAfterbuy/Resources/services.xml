<?xml version="1.0" encoding="utf-8"?>
<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>

        <!-- Commands -->

        <service id="fatchip_afterbuy.commands.get_categories" class="FatchipAfterbuy\Commands\getCategories">
            <tag name="console.command" />
            <argument type="service" id="fatchip_afterbuy.services.read_data.external.read_categories_service" />
            <argument type="service" id="fatchip_afterbuy.services.write_data.internal.write_categories_service" />
        </service>

        <service id="fatchip_afterbuy.commands.send_orders" class="FatchipAfterbuy\Commands\sendOrders">
            <tag name="console.command" />
            <argument type="service" id="fatchip_afterbuy.services.read_data.internal.read_orders_service" />
            <argument type="service" id="fatchip_afterbuy.services.write_data.external.write_orders_service" />
        </service>

        <!-- Orders -->

        <service class="FatchipAfterbuy\Services\ReadData\Internal\ReadOrdersService" id="fatchip_afterbuy.services.read_data.internal.read_orders_service" parent="fatchip_afterbuy.services.read_data.abstract_read_data_service">
            <argument type="string">FatchipAfterbuy\ValueObjects\Orders</argument>
        </service>

        <service class="FatchipAfterbuy\Services\WriteData\External\WriteOrdersService" id="fatchip_afterbuy.services.write_data.external.write_orders_service" parent="fatchip_afterbuy.services.write_data.abstract_write_data_service">
            <argument id="models" type="service"/>
        </service>

        <!-- Categories -->

        <service class="FatchipAfterbuy\Services\ReadData\External\ReadCategoriesService" id="fatchip_afterbuy.services.read_data.external.read_categories_service" parent="fatchip_afterbuy.services.read_data.abstract_read_data_service">
            <argument type="string">FatchipAfterbuy\ValueObjects\Category</argument>
        </service>

        <service class="FatchipAfterbuy\Services\WriteData\Internal\WriteCategoriesService" id="fatchip_afterbuy.services.write_data.internal.write_categories_service" parent="fatchip_afterbuy.services.write_data.abstract_write_data_service">
            <argument id="models" type="service"/>
              <call method="initHelper">
                <argument id="fatchip_afterbuy.services.helper.shopware_category_helper" type="service"/>
                <argument type="string">afterbuyCatalogId</argument>
                <argument type="string">true</argument>
            </call>
        </service>

        <!-- Abstracts -->

        <service id="fatchip_afterbuy.services.read_data.abstract_read_data_service" class="FatchipAfterbuy\Services\ReadData\AbstractReadDataService" abstract="true">
            <call method="setLogger">
                <argument type="service" id="afterbuy.logger" />
            </call>
        </service>

        <service id="fatchip_afterbuy.services.write_data.abstract_write_data_service" class="FatchipAfterbuy\Services\WriteData\AbstractWriteDataService" abstract="true">
            <call method="setLogger">
                <argument type="service" id="afterbuy.logger" />
            </call>
        </service>

        <!-- Helper -->

        <service class="FatchipAfterbuy\Services\Helper\ShopwareCategoryHelper" id="fatchip_afterbuy.services.helper.shopware_category_helper">
            <argument id="models" type="service"/>
            <argument type="string">\Shopware\Models\Category\Category</argument>
            <argument type="string">\Shopware\Models\Attribute\Category</argument>
        </service>

        <!-- Logger -->

        <service id="monolog.handler.afterbuy_file" class="Monolog\Handler\StreamHandler" public="false">
            <argument>./var/log/afterbuy.log</argument>
            <argument>-1</argument>
            <call method="pushProcessor">
                <argument type="service" id="monolog.processor.uid" />
            </call>
            <!--
            <call method="setFormatter">
                <argument type="service" id="myproject_mycommand.logger.formatter"/>
            </call>
            -->
        </service>

        <service id="afterbuy.logger" class="Shopware\Components\Logger">
            <argument>Afterbuy</argument>
            <argument type="collection">
                    <argument type="service" id="monolog.handler.afterbuy_file"/>
            </argument>
        </service>

    </services>
</container>
